{
  "name": "gulp-requirejs",
  "description": "Builds projects using require.js's optimizer",
  "version": "0.1.3",
  "homepage": "http://github.com/robinthrift/gulp-requirejs",
  "repository": {
    "type": "git",
    "url": "git://github.com/robinthrift/gulp-requirejs.git"
  },
  "author": {
    "name": "Robin Thrift",
    "email": "thrift.d.robin@googlemail.com",
    "url": "http://webbrickworks.com/"
  },
  "main": "./index.js",
  "keywords": [],
  "dependencies": {
    "gulp-util": "~2.2.5",
    "requirejs": "2.1.8",
    "event-stream": "~3.0.20"
  },
  "devDependencies": {
    "mocha": "*",
    "should": "*"
  },
  "scripts": {
    "test": "mocha"
  },
  "engines": {
    "node": ">= 0.4.0"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "http://github.com/robinthrift/gulp-requirejs/raw/master/LICENSE"
    }
  ],
  "readme": "#gulp-requirejs\n\n[![Dependency Status](https://david-dm.org/robinthrift/gulp-requirejs.png)](https://david-dm.org/robinthrift/gulp-requirejs)\n[![Build Status](https://travis-ci.org/RobinThrift/gulp-requirejs.png?branch=master)](https://travis-ci.org/RobinThrift/gulp-requirejs)\n\n## Information\n\nA small, simply, very easy wrapper around the [require.js optimizer](https://github.com/jrburke/r.js) to work with [gulp.js](https://github.com/gulpjs/gulp)\n\n<table>\n<tr> \n<td>Package</td><td>gulp-requirejs</td>\n</tr>\n<tr>\n<td>Description</td>\n<td>uses require.js's r.js optimizer to combine require.js AMD modules into one file</td>\n</tr>\n<tr>\n<td>Node Version</td>\n<td>>= 0.4</td>\n</tr>\n</table>\n\n\n##Installation\n\nSimply add `gulp-requirejs` as a dev-dependency in your package.json or run\n\n```bash\n$ npm install --save-dev gulp-requirejs\n```\n\n## Usage\n\nBecause the require.js optimizer (_r.js_) is a kind of build system in itself we can't use the `gulp.src([...])` syntax at the moment (I might add this in future), instead this wrapper itself emits a pipable stream, holding a 'virtual' file, in which the result of the r.js build process are saved.\n  \nThe resulting stream can be treated like a regular `gulp.src(...)` stream.\n\n>NOTE: The built in minification/obfuscation is deactivated by default and can not be switched on. Please use a gulp plugin like gulp-uglify for this.\n\n```javascript\nvar gulp = require('gulp'),\n    rjs = require('gulp-requirejs');\n\ngulp.task('requirejsBuild', function() {\n    rjs({\n        baseUrl: 'path/to/your/base/file.js',\n        out: 'FILENAME\\_TO\\_BE\\_OUTPUTTED',\n        shim: {\n            // standard require.js shim options\n        },\n        // ... more require.js options\n    })\n        .pipe(gulp.dest('./delpoy/')); // pipe it to the output DIR\n});\n```\n\n### Error handling\n\ngulp-requirejs will emit errors when you don't pass an options object and if the `baseUrl` or `out` properties are undefined. \n  \nThe requiere.js optimizer itself might also emit errors; unfortunately there's no way of catching them elegantly at the moment. \n\n\n## Options\n\nThe options object supports the same parameters as the [require.js optimizer](https://github.com/jrburke/r.js).\n\n",
  "readmeFilename": "README.md",
  "_id": "gulp-requirejs@0.1.3",
  "dist": {
    "shasum": "0cbfdc3e36ca20bf50332f710a4df7a36a34a3fc",
    "tarball": "http://registry.npmjs.org/gulp-requirejs/-/gulp-requirejs-0.1.3.tgz"
  },
  "_from": "gulp-requirejs@>=0.1.3 <0.2.0",
  "_npmVersion": "1.2.17",
  "_npmUser": {
    "name": "robinthrift",
    "email": "thrift.d.robin@googlemail.com"
  },
  "maintainers": [
    {
      "name": "robinthrift",
      "email": "thrift.d.robin@googlemail.com"
    }
  ],
  "directories": {},
  "_shasum": "0cbfdc3e36ca20bf50332f710a4df7a36a34a3fc",
  "_resolved": "https://registry.npmjs.org/gulp-requirejs/-/gulp-requirejs-0.1.3.tgz"
}
